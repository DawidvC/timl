structure List = struct

datatype list 'a : {Nat} =
         Nil of list 'a {0} 
       | Cons {n : Nat} of 'a * list 'a {n} --> list 'a {n + 1} 

val ['a] f = fn {n : Nat} (ls : list 'a {n}) return list _ {n-1} =>
           case ls of
               Nil => ls
             (* | Cons (x, xs) => xs *)
             | Cons (x, xs) => Cons (x, xs)
end
