Applying SMT solver ...
SMT solver to solve these problems:
    ===============
    (0 = (ceil (($ 0) / 2)))

    ===============
    (0 = (floor (($ 0) / 2)))

    ===============
    (1 = (ceil (($ 1) / 2)))

    ===============
    (0 = (floor (($ 1) / 2)))

    __n'_x2 : Nat
    ===============
    (((ceil (($ __n'_x2) / 2)) + 1) = (ceil ((($ __n'_x2) + ($ 1) + ($ 1)) / 2)))

    __n'_x2 : Nat
    ===============
    (((floor (($ __n'_x2) / 2)) + 1) = (floor ((($ __n'_x2) + ($ 1) + ($ 1)) / 2)))

    ===============
    True

    ===============
    True

    __n' : Nat
    __n'_x2 : Nat
    ===============
    ((__n' + __n'_x2 + 1 + 1) = (__n' + 1 + __n'_x2 + 1))

    ===============
    True

    __n' : Nat
    ===============
    (((ceil ((($ __n') + ($ 1) + ($ 1)) / 2)) + (floor ((($ __n') + ($ 1) + ($ 1)) / 2))) = (__n' + 1 + 1))

    ===============
    True

    ((fn n => (2.0 * ($ n))) <== (fn n => ($ n)))
    n2 : Nat
    __n' : Nat
    ===============
    ((__n' + n2 + 1) = (__n' + 1 + n2))

    ((fn n => (2.0 * ($ n))) <== (fn n => ($ n)))
    __n' : Nat
    ===============
    ((1.0 + 1.0 + (2.0 * ($ __n'))) <= (2.0 * (($ __n') + ($ 1))))

    ===============
    True

    n2 : Nat
    __n' : Nat
    ===============
    ((__n' + n2 + 1) = (__n' + 1 + n2))

    __n' : Nat
    ===============
    (((ceil ((($ __n') + ($ 1) + ($ 1)) / 2)) + (floor ((($ __n') + ($ 1) + ($ 1)) / 2))) = (__n' + 1 + 1))
