!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
=	/Users/wayne/timl/impl/compiler/compile.sml	/^      val () =$/;"	v	language:SML
admits	/Users/wayne/timl/impl/compiler/compile.sml	/^      val admits : (string * E.prop) list = #3 result$/;"	v	language:SML
ANF	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^  structure ANF =$/;"	r	language:SML
ANF	/Users/wayne/timl/impl/compiler/passes.sml	/^  structure ANF =$/;"	r	language:SML
assert	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^  fun assert b = if b then () else raise CheckFail$/;"	f	language:SML
base	/Users/wayne/timl/impl/compiler/compile.sml	/^          val base = #base base_ext$/;"	v	language:SML
base_ext	/Users/wayne/timl/impl/compiler/compile.sml	/^          val base_ext = splitBaseExt entry$/;"	v	language:SML
bd	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^      val bd = List.nth (ctx, i)$/;"	v	language:SML
bind	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  datatype bind =$/;"	t	language:SML
bool_cstr	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val bool_cstr = CstrAbs (KdBool, CstrSum (CstrExists (KdSubset (KdUnit, PrBinRel (PrRelEq, CstrVar 1, CstrTrue)), CstrTypeUnit), CstrExists (KdSubset (KdUnit, PrBinRel (PrRelEq, CstrVar 1, CstrFalse)), CstrTypeUnit)))$/;"	v	language:SML
bool_cstr_body	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val bool_cstr_body = CstrSum (CstrExists (KdSubset (KdUnit, PrBinRel (PrRelEq, CstrVar 1, CstrTrue)), CstrTypeUnit), CstrExists (KdSubset (KdUnit, PrBinRel (PrRelEq, CstrVar 1, CstrFalse)), CstrTypeUnit))$/;"	v	language:SML
bop	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (bop, tm1, tm2) = extract_tm_bin_op (#2 tyrel)$/;"	v	language:SML
ccontext	/Users/wayne/timl/impl/compiler/desugar.sml	/^  type ccontext = int$/;"	t	language:SML
CheckFail	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^  exception CheckFail$/;"	e	language:SML
check_kinding_derivation	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^  fun check_kinding_derivation kdderiv = true$/;"	f	language:SML
check_kind_wellformness_derivation	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^  fun check_kind_wellformness_derivation kdwf = true$/;"	f	language:SML
check_proping_derivation	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^  fun check_proping_derivation prderiv = true$/;"	f	language:SML
check_typing_derivation	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^  fun check_typing_derivation tyderiv =$/;"	f	language:SML
combine	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  fun combine (ups : Arg.up list) = List.foldl Arg.combiner Arg.upward_base ups$/;"	f	language:SML
combine	/Users/wayne/timl/impl/compiler/transform.sml	/^  fun combine (ups : Arg.up list) = List.foldl Arg.combiner Arg.upward_base ups$/;"	f	language:SML
combiner	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun combiner ((), ()) = ()$/;"	f	language:SML
combiner	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val combiner : (up * up) -> up$/;"	v	language:SML
combiner	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun combiner ((), ()) = ()$/;"	f	language:SML
combiner	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun combiner ((), ()) = ()$/;"	f	language:SML
combiner	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun combiner (_, _) = ""$/;"	f	language:SML
combiner	/Users/wayne/timl/impl/compiler/transform.sml	/^  val combiner : (up * up) -> up$/;"	v	language:SML
Compile	/Users/wayne/timl/impl/compiler/compile.sml	/^structure Compile =$/;"	r	language:SML
constr	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  datatype constr =$/;"	t	language:SML
constrs'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val constrs' = map walk_constr constrs$/;"	v	language:SML
constrs'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val constrs' = map walk_constr constrs$/;"	v	language:SML
constr_bin_op	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and constr_bin_op =$/;"	t	language:SML
constr_un_op	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and constr_un_op =$/;"	t	language:SML
context	/Users/wayne/timl/impl/compiler/desugar.sml	/^  type context = scontext * kcontext * ccontext * tcontext$/;"	t	language:SML
context	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type context = bind list$/;"	t	language:SML
counter	/Users/wayne/timl/impl/compiler/passes.sml	/^          val counter = ref 0$/;"	v	language:SML
cstr'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val cstr' = Passes.TermShift.shift_constr_above (List.length delta) dep cstr$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr1, ()) = on_constr (cstr1, (who + 1, to))$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr1, ()) = on_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr1, ()) = on_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr1, ()) = transform_constr (cstr1, (ctx + 1, delta))$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr1, ()) = transform_constr (cstr1, (ctx, delta))$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr1, ()) = transform_constr (cstr1, (ctx, delta))$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, thread) = transform_constr (cstr1, thread)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr1, up1) = transform_constr (cstr1, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr2, ()) = on_constr (cstr2, (who + 1, to))$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr2, ()) = on_constr (cstr2, (who + 1, to))$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr2, ()) = on_constr (cstr2, (who + 1, to))$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr2, ()) = on_constr (cstr2, (who + 1, to))$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr2, ()) = transform_constr (cstr2, (ctx + 1, delta))$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr2, ()) = transform_constr (cstr2, (ctx + 1, delta))$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr2, ()) = transform_constr (cstr2, (ctx + 1, delta))$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (cstr2, ()) = transform_constr (cstr2, (ctx + 1, delta))$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, thread) = transform_constr (cstr2, thread)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr2, up2) = transform_constr (cstr2, down)$/;"	v	language:SML
cstr3	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr3, thread) = transform_constr (cstr3, thread)$/;"	v	language:SML
cstr3	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr3, thread) = transform_constr (cstr3, thread)$/;"	v	language:SML
cstr3	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr3, up3) = transform_constr (cstr3, down)$/;"	v	language:SML
cstr3	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (cstr3, up3) = transform_constr (cstr3, down)$/;"	v	language:SML
ctx	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val ctx = List.nth (fctx, f)$/;"	v	language:SML
ctx'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val ctx' = shift_context_above delta dep ctx$/;"	v	language:SML
ctx'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val ctx' = shift_context_above delta dep ctx$/;"	v	language:SML
ctx'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val ctx' = shift_context_above delta dep ctx$/;"	v	language:SML
ctx'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val ctx' = shift_context_above delta dep ctx$/;"	v	language:SML
ctx'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val ctx' = shift_context_above delta dep ctx$/;"	v	language:SML
d'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val d' = Val (tnames, on_ptrn gctx sctx kctx cctx p, on_expr gctx sctx kctx cctx tctx e, r)$/;"	v	language:SML
decl'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (decl', (sctx', kctx', cctx', tctx')) = on_decl gctx sctx kctx cctx tctx decl$/;"	v	language:SML
decl'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (decl', (sctx', kctx', cctx', tctx')) = on_decl gctx sctx kctx cctx tctx decl$/;"	v	language:SML
decl'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (decl', (sctx', kctx', cctx', tctx')) = walk sctx kctx cctx tctx decl$/;"	v	language:SML
decls'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (decls', (sctx', kctx', cctx', tctx')) = foldl iter ([], (sctx, kctx, cctx, tctx)) decls$/;"	v	language:SML
decls'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (decls', sctx', kctx', cctx', tctx') = foldl iter ([], 0, 0, 0, 0) decls$/;"	v	language:SML
decls'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val decls' = #1 (foldl iter ([], sctx + 1, kctx, cctx, tctx) decls)$/;"	v	language:SML
decls''	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val decls'' = rev decls'$/;"	v	language:SML
decls''	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val decls'' = rev decls'$/;"	v	language:SML
decl_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun decl_map (on_mod_proj : sigcontext -> id -> id) (on_idx : sigcontext -> scontext -> idx -> idx)$/;"	f	language:SML
default_transform_constr	/Users/wayne/timl/impl/compiler/transform.sml	/^  fun default_transform_constr (cstr : constr, down : Arg.down) =$/;"	f	language:SML
default_transform_constr	/Users/wayne/timl/impl/compiler/transform.sml	/^  fun default_transform_constr (cstr : constr, thread : Arg.thread) =$/;"	f	language:SML
default_transform_kind	/Users/wayne/timl/impl/compiler/transform.sml	/^  and default_transform_kind (kd : kind, down : Arg.down) =$/;"	v	language:SML
default_transform_kind	/Users/wayne/timl/impl/compiler/transform.sml	/^  and default_transform_kind (kd : kind, thread : Arg.thread) =$/;"	v	language:SML
default_transform_kinding_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and default_transform_kinding_derivation (kdderiv : kinding_derivation, down : Arg.down) =$/;"	v	language:SML
default_transform_kind_wellformness_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and default_transform_kind_wellformness_derivation (kdwf : kind_wellformedness_derivation, down : Arg.down) =$/;"	v	language:SML
default_transform_prop	/Users/wayne/timl/impl/compiler/transform.sml	/^  and default_transform_prop (pr : prop, down : Arg.down) =$/;"	v	language:SML
default_transform_prop	/Users/wayne/timl/impl/compiler/transform.sml	/^  and default_transform_prop (pr : prop, thread : Arg.thread) =$/;"	v	language:SML
default_transform_proping_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and default_transform_proping_derivation (prderiv : proping_derivation, down : Arg.down) =$/;"	v	language:SML
default_transform_prop_wellformness_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and default_transform_prop_wellformness_derivation (prwf : prop_wellformedness_derivation, down : Arg.down) =$/;"	v	language:SML
default_transform_term	/Users/wayne/timl/impl/compiler/transform.sml	/^  fun default_transform_term (tm : term, down : Arg.down) =$/;"	f	language:SML
default_transform_term	/Users/wayne/timl/impl/compiler/transform.sml	/^  fun default_transform_term (tm : term, thread : Arg.thread) =$/;"	f	language:SML
default_transform_typing_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  fun default_transform_typing_derivation (tyderiv : typing_derivation, down : Arg.down) =$/;"	f	language:SML
DerivationPasses	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^structure DerivationPasses =$/;"	r	language:SML
Desugar	/Users/wayne/timl/impl/compiler/desugar.sml	/^structure Desugar =$/;"	r	language:SML
down	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      type down = int * context$/;"	t	language:SML
down	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  type down$/;"	t	language:SML
down	/Users/wayne/timl/impl/compiler/passes.sml	/^      type down = int * constr$/;"	t	language:SML
down	/Users/wayne/timl/impl/compiler/passes.sml	/^      type down = int * int$/;"	t	language:SML
down	/Users/wayne/timl/impl/compiler/passes.sml	/^      type down = string list$/;"	t	language:SML
down	/Users/wayne/timl/impl/compiler/transform.sml	/^  type down$/;"	t	language:SML
E	/Users/wayne/timl/impl/compiler/compile.sml	/^  structure E = Expr$/;"	r	language:SML
e'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val e' = on_expr gctx sctx' kctx'' cctx' tctx'' e$/;"	v	language:SML
e1'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val e1' = walk sctx kctx cctx tctx e1$/;"	v	language:SML
entry	/Users/wayne/timl/impl/compiler/compile.sml	/^      val entry : string = hd args$/;"	v	language:SML
entry_is_legal	/Users/wayne/timl/impl/compiler/compile.sml	/^      val entry_is_legal = List.exists (fn (k, v) =>$/;"	v	language:SML
expr_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun expr_map (on_mod_proj : sigcontext -> id -> id) (on_idx : sigcontext -> scontext -> idx -> idx)$/;"	f	language:SML
ext	/Users/wayne/timl/impl/compiler/compile.sml	/^          val ext = #ext base_ext$/;"	v	language:SML
extract_cstr_arrow	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_cstr_arrow (CstrArrow r) = r$/;"	f	language:SML
extract_cstr_forall	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_cstr_forall (CstrForall r) = r$/;"	f	language:SML
extract_cstr_prod	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_cstr_prod (CstrProd r) = r$/;"	f	language:SML
extract_cstr_rec	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_cstr_rec (CstrRec r) = r$/;"	f	language:SML
extract_cstr_sum	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_cstr_sum (CstrSum r) = r$/;"	f	language:SML
extract_cstr_type_array	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_cstr_type_array (CstrTypeArray r) = r$/;"	f	language:SML
extract_cstr_type_nat	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_cstr_type_nat (CstrTypeNat r) = r$/;"	f	language:SML
extract_kdrel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_kdrel kdderiv =$/;"	f	language:SML
extract_kdwfrel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_kdwfrel kdwf =$/;"	f	language:SML
extract_prrel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_prrel prderiv =$/;"	f	language:SML
extract_tm_abs	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_tm_abs (TmAbs r) = r$/;"	f	language:SML
extract_tm_bin_op	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_tm_bin_op (TmBinOp r) = r$/;"	f	language:SML
extract_tm_cstr_abs	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_tm_cstr_abs (TmCstrAbs r) = r$/;"	f	language:SML
extract_tm_rec	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_tm_rec (TmRec r) = r$/;"	f	language:SML
extract_tyrel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun extract_tyrel tyderiv =$/;"	f	language:SML
fac_ty	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val fac_ty = CstrForall (KdNat, CstrArrow (CstrTypeNat (CstrVar 0), CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrVar 0))))$/;"	v	language:SML
fold_app	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              fun fold_app ty1 rands =$/;"	f	language:SML
fold_app	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          fun fold_app ty1 rands =$/;"	f	language:SML
fold_app	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          fun fold_app ty1 rands =$/;"	f	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^                  val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^                  val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^                  val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^                  val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^                  val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^                  val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^                  val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^                  val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^              val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^              val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^              val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^              val fresh = gensym ()$/;"	v	language:SML
fresh	/Users/wayne/timl/impl/compiler/passes.sml	/^              val fresh = gensym()$/;"	v	language:SML
fresh1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val fresh1 = gensym ()$/;"	v	language:SML
fresh2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val fresh2 = gensym ()$/;"	v	language:SML
gctx	/Users/wayne/timl/impl/compiler/compile.sml	/^      val gctx : PTC.sigcontext = #2 result$/;"	v	language:SML
gensym	/Users/wayne/timl/impl/compiler/passes.sml	/^      val gensym =$/;"	v	language:SML
get_bind	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^  fun get_bind (ctx : context, i : int) =$/;"	f	language:SML
i'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val i' = on_idx gctx sctx i$/;"	v	language:SML
ibinds'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val ibinds' = fold_ibinds (name_sorts'', (t', indices'))$/;"	v	language:SML
ibinds'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val ibinds' = fold_ibinds (name_sorts'', (t', indices'))$/;"	v	language:SML
idx_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun idx_map (on_mod_proj : sigcontext -> id -> id) (on_vars : scontext -> id -> id) (gctx : sigcontext) (sctx : scontext) (i : idx) : idx =$/;"	f	language:SML
Impossible	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    exception Impossible$/;"	e	language:SML
inames	/Users/wayne/timl/impl/compiler/desugar.sml	/^                          val (inames, enames) = ptrn_names p$/;"	v	language:SML
inames	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (inames, enames) = ptrn_names rp$/;"	v	language:SML
inames	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (inames, enames) = ptrn_names p$/;"	v	language:SML
inames	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (inames, enames) = ptrn_names p$/;"	v	language:SML
indices'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val indices' = map (on_idx gctx sctx') indices$/;"	v	language:SML
indices'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val indices' = map (on_idx gctx sctx') indices$/;"	v	language:SML
indices'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val indices' = map (on_idx gctx sctx) indices$/;"	v	language:SML
inner	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val (inner, rands) = unfold_app ty1_new []$/;"	v	language:SML
inner_kd	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val (inner_kd, inner_cstr) = extract_cstr_rec inner$/;"	v	language:SML
inner_tyderiv_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val inner_tyderiv_new = k (TyDerivUnit (BdType CstrUnit :: (#1 tyrel4_new), TmUnit, CstrUnit, CstrNat 0), BdType CstrUnit :: (List.concat [d4, d2, d1]))$/;"	v	language:SML
inner_tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val inner_tyrel_new = extract_tyrel inner_tyderiv_new$/;"	v	language:SML
is_value	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun is_value tm =$/;"	f	language:SML
is_zero_ty	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val is_zero_ty = CstrForall (KdNat, CstrArrow (CstrTypeNat (CstrVar 0), Passes.TermSubstConstr.subst_constr_in_constr_top (CstrBinOp (CstrBopEq, CstrVar 0, CstrNat 0)) bool_cstr_body, CstrTime "1.0"))$/;"	v	language:SML
iter	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  fun iter ((name, s), (acc, sctx)) =$/;"	f	language:SML
iter	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  fun iter ((name, s), (acc, sctx)) =$/;"	f	language:SML
iter	/Users/wayne/timl/impl/compiler/desugar.sml	/^              fun iter (decl, (acc, (sctx, kctx, cctx, tctx))) =$/;"	f	language:SML
iter	/Users/wayne/timl/impl/compiler/desugar.sml	/^              fun iter (decl, (acc, sctx, kctx, cctx, tctx)) =$/;"	f	language:SML
iter	/Users/wayne/timl/impl/compiler/desugar.sml	/^              fun iter (decl, (acc, sctx, kctx, cctx, tctx)) =$/;"	f	language:SML
iter	/Users/wayne/timl/impl/compiler/desugar.sml	/^              fun iter (stb, (acc, sctx, kctx, cctx, tctx)) =$/;"	f	language:SML
iter	/Users/wayne/timl/impl/compiler/desugar.sml	/^          fun iter (spec, (acc, s, k, c, t)) =$/;"	f	language:SML
iter	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun iter (tb, (acc, gctx, fctx)) =$/;"	f	language:SML
kcontext	/Users/wayne/timl/impl/compiler/desugar.sml	/^  type kcontext = int$/;"	t	language:SML
kctx'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val kctx' = kctx + 1 + length tnames$/;"	v	language:SML
kctx'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val kctx' = kctx + 1 + length tnames$/;"	v	language:SML
kctx'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val kctx' = kctx + length tnames$/;"	v	language:SML
kd'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val kd' = Passes.TermShift.shift_kind_above (List.length delta) dep kd$/;"	v	language:SML
kd'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val kd' = Passes.TermShift.shift_kind_above (List.length delta) dep kd$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val (kd1, tm2) = extract_tm_abs (#2 tyrel)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val (kd1, tm2) = extract_tm_cstr_abs (#2 tyrel)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val (kd1, tm2) = extract_tm_rec (#2 tyrel)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = on_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = on_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = on_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = on_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = on_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = on_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = on_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = on_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = transform_kind (kd1, (ctx, delta))$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = transform_kind (kd1, (ctx, delta))$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = transform_kind (kd1, (ctx, delta))$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = transform_kind (kd1, (ctx, delta))$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = transform_kind (kd1, (ctx, delta))$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = transform_kind (kd1, (ctx, delta))$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = transform_kind (kd1, (ctx, delta))$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (kd1, ()) = transform_kind (kd1, (ctx, delta))$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, thread) = transform_kind (kd1, thread)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd1, up1) = transform_kind (kd1, down)$/;"	v	language:SML
kd2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd2, thread) = transform_kind (kd2, thread)$/;"	v	language:SML
kd2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (kd2, up2) = transform_kind (kd2, down)$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdderiv1, ()) = on_kdderiv (kdderiv1, (dep + 1, delta))$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdderiv1, ()) = on_kdderiv (kdderiv1, down)$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdderiv1, ()) = on_kdderiv (kdderiv1, down)$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdderiv1, ()) = on_kdderiv (kdderiv1, down)$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv1, up1) = on_kdderiv kdderiv1$/;"	v	language:SML
kdderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdderiv1_new = shift_kinding_derivation_above d2 0 kdderiv1$/;"	v	language:SML
kdderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdderiv1_new = shift_kinding_derivation_above d2 0 kdderiv1$/;"	v	language:SML
kdderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdderiv1_new = shift_kinding_derivation_above d2 0 kdderiv1$/;"	v	language:SML
kdderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdderiv1_new = shift_kinding_derivation_above d3 0 kdderiv1$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdderiv2, ()) = on_kdderiv (kdderiv2, (dep + 1, delta))$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdderiv2, ()) = on_kdderiv (kdderiv2, (dep + 1, delta))$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdderiv2, ()) = on_kdderiv (kdderiv2, (dep + 1, delta))$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdderiv2, ()) = on_kdderiv (kdderiv2, (dep + 1, delta))$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv2, up2) = on_kdderiv kdderiv2$/;"	v	language:SML
kdderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdderiv2_new = shift_kinding_derivation_above d1 0 kdderiv2$/;"	v	language:SML
kdderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdderiv2_new = shift_kinding_derivation_above d3 0 kdderiv2$/;"	v	language:SML
kdderiv3	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv3, up3) = on_kdderiv kdderiv3$/;"	v	language:SML
kdderiv3	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdderiv3, up3) = on_kdderiv kdderiv3$/;"	v	language:SML
kdrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel1 = ANF.extract_kdrel kdderiv1$/;"	v	language:SML
kdrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel1 = ANF.extract_kdrel kdderiv1$/;"	v	language:SML
kdrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel1 = ANF.extract_kdrel kdderiv1$/;"	v	language:SML
kdrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel1 = ANF.extract_kdrel kdderiv1$/;"	v	language:SML
kdrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel1 = ANF.extract_kdrel kdderiv1$/;"	v	language:SML
kdrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel1 = ANF.extract_kdrel kdderiv1$/;"	v	language:SML
kdrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel1 = ANF.extract_kdrel kdderiv1$/;"	v	language:SML
kdrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdrel1_new = extract_kdrel kdderiv1_new$/;"	v	language:SML
kdrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdrel1_new = extract_kdrel kdderiv1_new$/;"	v	language:SML
kdrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdrel1_new = extract_kdrel kdderiv1_new$/;"	v	language:SML
kdrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdrel1_new = extract_kdrel kdderiv1_new$/;"	v	language:SML
kdrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel2 = ANF.extract_kdrel kdderiv2$/;"	v	language:SML
kdrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdrel2 = ANF.extract_kdrel kdderiv2$/;"	v	language:SML
kdrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdrel2_new = extract_kdrel kdderiv2_new$/;"	v	language:SML
kdrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val kdrel2_new = extract_kdrel kdderiv2_new$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdwf1, ()) = on_kdwf (kdwf1, down)$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdwf1, ()) = on_kdwf (kdwf1, down)$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdwf1, ()) = on_kdwf (kdwf1, down)$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdwf1, ()) = on_kdwf (kdwf1, down)$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdwf1, ()) = on_kdwf (kdwf1, down)$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdwf1, ()) = on_kdwf (kdwf1, down)$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdwf1, ()) = on_kdwf (kdwf1, down)$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (kdwf1, ()) = on_kdwf (kdwf1, down)$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdwf1, up1) = on_kdwf kdwf1$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdwf1, up1) = on_kdwf kdwf1$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdwf1, up1) = on_kdwf kdwf1$/;"	v	language:SML
kdwf1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdwf1, up1) = on_kdwf kdwf1$/;"	v	language:SML
kdwf2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (kdwf2, up2) = on_kdwf kdwf2$/;"	v	language:SML
kdwfrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val kdwfrel1 = ANF.extract_kdwfrel kdwf1$/;"	v	language:SML
kind	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and kind =$/;"	t	language:SML
kinding_derivation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and kinding_derivation =$/;"	t	language:SML
kinding_relation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type kinding_relation = context * constr * kind$/;"	t	language:SML
kind_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun kind_map (on_sort : sigcontext -> scontext -> sort -> sort) (gctx : sigcontext) (sctx : scontext) (k : kind) : kind =$/;"	f	language:SML
kind_wellformedness_derivation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  datatype kind_wellformedness_derivation =$/;"	t	language:SML
kind_wellformedness_relation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type kind_wellformedness_relation = context * kind$/;"	t	language:SML
left	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val (left, right) = (List.take (ctx, dep), List.drop (ctx, dep))$/;"	v	language:SML
left'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val left' = List.mapi (fn (i, bd) =>$/;"	v	language:SML
loc	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type loc = nat$/;"	t	language:SML
long_id_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun long_id_map (on_mod_proj : id -> id) (on_var : id -> id) ((mp, x) : long_id) : long_id =$/;"	f	language:SML
main	/Users/wayne/timl/impl/compiler/compile.sml	/^  fun main (prog_name : string, args : string list) : int =$/;"	f	language:SML
main	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^  fun main (prog : string, args : string list) =$/;"	f	language:SML
MicroTiML	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^structure MicroTiML =$/;"	r	language:SML
MicroTiMLChecker	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^structure MicroTiMLChecker =$/;"	r	language:SML
MicroTiMLTest	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^structure MicroTiMLTest =$/;"	r	language:SML
minus_ty	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val minus_ty = CstrForall (KdNat, CstrForall (KdNat, CstrArrow (CstrProd (CstrTypeNat (CstrVar 1), CstrTypeNat (CstrVar 0)), CstrTypeNat (CstrBinOp (CstrBopDiff, CstrVar 1, CstrVar 0)), CstrTime "1.0")))$/;"	v	language:SML
modu'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (modu', ctx) = on_modu (ctx :: gctx) modu$/;"	v	language:SML
modu'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (modu', ctx) = on_modu gctx modu$/;"	v	language:SML
modu_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun modu_map (on_mod_proj : sigcontext -> id -> id)$/;"	f	language:SML
mod_name	/Users/wayne/timl/impl/compiler/compile.sml	/^      val (mod_name, func_name) =$/;"	v	language:SML
mtype_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun mtype_map (on_mod_proj : sigcontext -> id -> id) (on_idx : sigcontext -> scontext -> idx -> idx)$/;"	f	language:SML
mult_ty	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val mult_ty = CstrArrow (CstrProd (CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrExists (KdNat, CstrTypeNat (CstrVar 0))), CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrTime "1.0")$/;"	v	language:SML
name_sorts	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (name_sorts, (t, indices)) = unfold_ibinds ibinds$/;"	v	language:SML
name_sorts	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (name_sorts, (t, indices)) = unfold_ibinds ibinds$/;"	v	language:SML
name_sorts'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (name_sorts', sctx') = foldl iter ([], sctx) name_sorts$/;"	v	language:SML
name_sorts'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (name_sorts', sctx') = foldl iter ([], sctx) name_sorts$/;"	v	language:SML
name_sorts''	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val name_sorts'' = rev name_sorts$/;"	v	language:SML
name_sorts''	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val name_sorts'' = rev name_sorts$/;"	v	language:SML
nat	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type nat = int$/;"	t	language:SML
normalize	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    and normalize tyderiv k =$/;"	f	language:SML
normalize	/Users/wayne/timl/impl/compiler/passes.sml	/^    and normalize tm k =$/;"	f	language:SML
normalize_derivation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun normalize_derivation tyderiv = normalize tyderiv (fn (x, d) => x)$/;"	f	language:SML
normalize_shift	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    and normalize_shift tyderiv k =$/;"	v	language:SML
normalize_shift	/Users/wayne/timl/impl/compiler/passes.sml	/^    and normalize_shift tm k =$/;"	f	language:SML
normalize_term	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun normalize_term tm = normalize tm (fn (x, d) => x)$/;"	f	language:SML
O	/Users/wayne/timl/impl/compiler/desugar.sml	/^  structure O = Option$/;"	r	language:SML
oi'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val oi' = O.map (on_idx gctx sctx) oi$/;"	v	language:SML
oi'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val oi' = O.map (on_idx gctx sctx) oi$/;"	v	language:SML
omt'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val omt' = O.map (on_mtype gctx sctx kctx) omt$/;"	v	language:SML
omt'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val omt' = O.map (on_mtype gctx sctx kctx) omt$/;"	v	language:SML
on_kdderiv	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_kdderiv kdderiv = transform_kinding_derivation (kdderiv, down)$/;"	f	language:SML
on_kdderiv	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_kdderiv kdderiv = transform_kinding_derivation (kdderiv, down)$/;"	f	language:SML
on_kdderiv	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_kdderiv kdderiv = transform_kinding_derivation (kdderiv, down)$/;"	f	language:SML
on_kdwf	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_kdwf kdwf = transform_kind_wellformness_derivation (kdwf, down)$/;"	f	language:SML
on_kdwf	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_kdwf kdwf = transform_kind_wellformness_derivation (kdwf, down)$/;"	f	language:SML
on_kinding_relation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun on_kinding_relation ((ctx, cstr, kd), (dep, delta)) =$/;"	f	language:SML
on_kinding_relation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val on_kinding_relation : MicroTiML.kinding_relation * down -> MicroTiML.kinding_relation$/;"	v	language:SML
on_kind_wellformness_relation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun on_kind_wellformness_relation ((ctx, kd), (dep, delta)) =$/;"	f	language:SML
on_kind_wellformness_relation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val on_kind_wellformness_relation : MicroTiML.kind_wellformedness_relation * down -> MicroTiML.kind_wellformedness_relation$/;"	v	language:SML
on_prderiv	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_prderiv prderiv = transform_proping_derivation (prderiv, down)$/;"	f	language:SML
on_prderiv	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_prderiv prderiv = transform_proping_derivation (prderiv, down)$/;"	f	language:SML
on_proping_relation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun on_proping_relation ((ctx, pr), (dep, delta)) =$/;"	f	language:SML
on_proping_relation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val on_proping_relation : MicroTiML.proping_relation * down -> MicroTiML.proping_relation$/;"	v	language:SML
on_prop_wellformness_relation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun on_prop_wellformness_relation ((ctx, pr), (dep, delta)) =$/;"	f	language:SML
on_prop_wellformness_relation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val on_prop_wellformness_relation : MicroTiML.prop_wellformedness_relation * down -> MicroTiML.prop_wellformedness_relation$/;"	v	language:SML
on_prwf	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_prwf prwf = transform_prop_wellformness_derivation (prwf, down)$/;"	f	language:SML
on_prwf	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_prwf prwf = transform_prop_wellformness_derivation (prwf, down)$/;"	f	language:SML
on_rel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          fun on_rel kdrel = on_kinding_relation (kdrel, down)$/;"	f	language:SML
on_rel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          fun on_rel kdrel = on_kind_wellformness_relation (kdrel, down)$/;"	f	language:SML
on_rel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          fun on_rel prrel = on_prop_wellformness_relation (prrel, down)$/;"	f	language:SML
on_rel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          fun on_rel tyrel = on_typing_relation (tyrel, down)$/;"	f	language:SML
on_rel	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_rel kdrel = Arg.on_kinding_relation (kdrel, down)$/;"	f	language:SML
on_rel	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_rel kdrel = Arg.on_kind_wellformness_relation (kdrel, down)$/;"	f	language:SML
on_rel	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_rel prrel = Arg.on_prop_wellformness_relation (prrel, down)$/;"	f	language:SML
on_rel	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_rel tyrel = Arg.on_typing_relation (tyrel, down)$/;"	f	language:SML
on_tyderiv	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^      fun on_tyderiv tyderiv = transform_typing_derivation (tyderiv, down)$/;"	f	language:SML
on_typing_relation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun on_typing_relation ((ctx, tm, ty, ti), (dep, delta)) =$/;"	f	language:SML
on_typing_relation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val on_typing_relation : MicroTiML.typing_relation * down -> MicroTiML.typing_relation$/;"	v	language:SML
p'	/Users/wayne/timl/impl/compiler/desugar.sml	/^      val (p', gctx', fctx') = foldl iter ([], [], []) p$/;"	v	language:SML
p''	/Users/wayne/timl/impl/compiler/desugar.sml	/^      val p'' = rev p'$/;"	v	language:SML
Passes	/Users/wayne/timl/impl/compiler/passes.sml	/^structure Passes =$/;"	r	language:SML
pr'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val pr' = Passes.TermShift.shift_prop_above (List.length delta) dep pr$/;"	v	language:SML
pr'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val pr' = Passes.TermShift.shift_prop_above (List.length delta) dep pr$/;"	v	language:SML
pr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr1, thread) = transform_prop (pr1, thread)$/;"	v	language:SML
pr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr1, thread) = transform_prop (pr1, thread)$/;"	v	language:SML
pr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr1, up1) = transform_prop (pr1, down)$/;"	v	language:SML
pr1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr1, up1) = transform_prop (pr1, down)$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (pr2, ()) = on_prop (pr2, (who + 1, to))$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (pr2, ()) = on_prop (pr2, (who + 1, to))$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (pr2, ()) = on_prop (pr2, (who + 1, to))$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (pr2, ()) = transform_prop (pr2, (ctx + 1, delta))$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (pr2, ()) = transform_prop (pr2, (ctx + 1, delta))$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (pr2, ()) = transform_prop (pr2, (ctx + 1, delta))$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr2, thread) = transform_prop (pr2, thread)$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr2, thread) = transform_prop (pr2, thread)$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr2, thread) = transform_prop (pr2, thread)$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr2, thread) = transform_prop (pr2, thread)$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr2, up2) = transform_prop (pr2, down)$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr2, up2) = transform_prop (pr2, down)$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr2, up2) = transform_prop (pr2, down)$/;"	v	language:SML
pr2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (pr2, up2) = transform_prop (pr2, down)$/;"	v	language:SML
prderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (prderiv2, ()) = on_prderiv (prderiv2, (dep + 1, delta))$/;"	v	language:SML
prderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prderiv2, up2) = on_prderiv prderiv2$/;"	v	language:SML
prderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prderiv2, up2) = on_prderiv prderiv2$/;"	v	language:SML
prderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prderiv2, up2) = on_prderiv prderiv2$/;"	v	language:SML
prderiv3	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prderiv3, up3) = on_prderiv prderiv3$/;"	v	language:SML
prderiv3	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prderiv3, up3) = on_prderiv prderiv3$/;"	v	language:SML
prderiv3_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val prderiv3_new = shift_proping_derivation_above (List.concat [d4, d2, d1]) 0 prderiv3$/;"	v	language:SML
prderiv3_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val prderiv3_new = shift_proping_derivation_above (List.concat [d2, d1]) 0 prderiv3$/;"	v	language:SML
Printer	/Users/wayne/timl/impl/compiler/passes.sml	/^  structure Printer =$/;"	r	language:SML
PrinterHelper	/Users/wayne/timl/impl/compiler/passes.sml	/^    structure PrinterHelper =$/;"	r	language:SML
PrinterIns	/Users/wayne/timl/impl/compiler/passes.sml	/^    structure PrinterIns = TermTransformPass(PrinterHelper)$/;"	r	language:SML
prog	/Users/wayne/timl/impl/compiler/compile.sml	/^      val prog : UE.prog = #1 result$/;"	v	language:SML
prog_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun prog_map (on_top_bind : sigcontext -> sigcontext -> top_bind -> top_bind * sigcontext * sigcontext)$/;"	f	language:SML
prop	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and prop =$/;"	t	language:SML
proping_derivation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and proping_derivation =$/;"	t	language:SML
proping_relation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type proping_relation = context * prop$/;"	t	language:SML
prop_bin_conn	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and prop_bin_conn =$/;"	t	language:SML
prop_bin_rel	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and prop_bin_rel =$/;"	t	language:SML
prop_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun prop_map (on_idx : sigcontext -> scontext -> idx -> idx) (gctx : sigcontext) (sctx : scontext) (p : prop) : prop =$/;"	f	language:SML
prop_wellformedness_derivation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and prop_wellformedness_derivation =$/;"	t	language:SML
prop_wellformedness_relation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type prop_wellformedness_relation = context * prop$/;"	t	language:SML
prrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val prrel2 = ANF.extract_prrel prderiv2$/;"	v	language:SML
prrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val prrel2 = ANF.extract_prrel prderiv2$/;"	v	language:SML
prrel3	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val prrel3 = ANF.extract_prrel prderiv3$/;"	v	language:SML
prrel3	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val prrel3 = ANF.extract_prrel prderiv3$/;"	v	language:SML
prwf1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prwf1, up1) = on_prwf prwf1$/;"	v	language:SML
prwf1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prwf1, up1) = on_prwf prwf1$/;"	v	language:SML
prwf2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (prwf2, ()) = on_prwf (prwf2, (dep + 1, delta))$/;"	v	language:SML
prwf2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (prwf2, ()) = on_prwf (prwf2, (dep + 1, delta))$/;"	v	language:SML
prwf2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (prwf2, ()) = on_prwf (prwf2, (dep + 1, delta))$/;"	v	language:SML
prwf2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prwf2, up2) = on_prwf prwf2$/;"	v	language:SML
prwf2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prwf2, up2) = on_prwf prwf2$/;"	v	language:SML
prwf2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prwf2, up2) = on_prwf prwf2$/;"	v	language:SML
prwf2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (prwf2, up2) = on_prwf prwf2$/;"	v	language:SML
PTC	/Users/wayne/timl/impl/compiler/compile.sml	/^  structure PTC = PreTypeCheck$/;"	r	language:SML
ptrn_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun ptrn_map (on_mod_proj : sigcontext -> id -> id) (on_mtype : sigcontext -> scontext -> kcontext -> mtype -> mtype)$/;"	f	language:SML
rand_tyderiv_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val rand_tyderiv_new = TyDerivArrayPut (rand_tyrel_new, tyderiv1_new, tyderiv2_new, prderiv3_new, tyderiv4_new)$/;"	v	language:SML
rand_tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val rand_tyrel_new = (#1 tyrel4_new, TmArrayPut (#2 tyrel1_new, #2 tyrel2_new, #2 tyrel4_new), CstrUnit, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, #4 tyrel1_new, #4 tyrel2_new), #4 tyrel4_new))$/;"	v	language:SML
re'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val re' = walk (sctx + length inames) kctx cctx (tctx + length enames) re$/;"	v	language:SML
res	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val res = k (tyderiv_intro_var, BdType ty :: d)$/;"	v	language:SML
res	/Users/wayne/timl/impl/compiler/passes.sml	/^              val res = "%var" ^ (str_int (!counter))$/;"	v	language:SML
res	/Users/wayne/timl/impl/compiler/passes.sml	/^          val res =$/;"	v	language:SML
res	/Users/wayne/timl/impl/compiler/passes.sml	/^          val res =$/;"	v	language:SML
res	/Users/wayne/timl/impl/compiler/passes.sml	/^          val res =$/;"	v	language:SML
result	/Users/wayne/timl/impl/compiler/compile.sml	/^      val result =$/;"	v	language:SML
return'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val return' = on_mtype gctx sctx' kctx'' return$/;"	v	language:SML
rp'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val rp' = on_ptrn gctx sctx kctx cctx rp$/;"	v	language:SML
rules'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val rules' = map walk_rule rules$/;"	v	language:SML
s'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                      val s' = on_sort gctx sctx s$/;"	v	language:SML
s'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                      val s' = on_sort gctx sctx s$/;"	v	language:SML
s'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val s' = on_sort gctx sctx s$/;"	v	language:SML
scontext	/Users/wayne/timl/impl/compiler/desugar.sml	/^  type scontext = int$/;"	t	language:SML
sctx'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                      val sctx' = sctx + 1$/;"	v	language:SML
sctx'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                      val sctx' = sctx + 1$/;"	v	language:SML
sgn'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (sgn', ctx) = on_sgn gctx sgn$/;"	v	language:SML
sgn_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun sgn_map (on_spec : sigcontext -> scontext -> kcontext -> ccontext -> tcontext -> spec -> spec * context)$/;"	f	language:SML
shift_constr	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun shift_constr d cstr = shift_constr_above d 0 cstr$/;"	f	language:SML
shift_constr_above	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun shift_constr_above d c cstr = #1 (transform_constr (cstr, (c, d)))$/;"	f	language:SML
shift_context_above	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun shift_context_above delta dep ctx =$/;"	f	language:SML
shift_kind	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun shift_kind d kd = shift_kind_above d 0 kd$/;"	f	language:SML
shift_kinding_derivation_above	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun shift_kinding_derivation_above delta dep kdderiv = #1 (transform_kinding_derivation (kdderiv, (dep, delta)))$/;"	f	language:SML
shift_kind_above	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun shift_kind_above d c kd = #1 (transform_kind (kd, (c, d)))$/;"	f	language:SML
shift_prop	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun shift_prop d pr = shift_prop_above d 0 pr$/;"	f	language:SML
shift_proping_derivation_above	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun shift_proping_derivation_above delta dep prderiv = #1 (transform_proping_derivation (prderiv, (dep, delta)))$/;"	f	language:SML
shift_prop_above	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun shift_prop_above d c pr = #1 (transform_prop (pr, (c, d)))$/;"	f	language:SML
shift_term	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun shift_term d tm = shift_term_above d 0 tm$/;"	f	language:SML
shift_term_above	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun shift_term_above d c tm = #1 (transform_term (tm, (c, d)))$/;"	f	language:SML
shift_typing_derivation_above	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun shift_typing_derivation_above delta dep tyderiv = #1 (transform_typing_derivation (tyderiv, (dep, delta)))$/;"	f	language:SML
sigcontext	/Users/wayne/timl/impl/compiler/desugar.sml	/^  type sigcontext = context list$/;"	t	language:SML
sorts'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val sorts' = map (on_sort gctx sctx) sorts$/;"	v	language:SML
sorts'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val sorts' = map (on_sort gctx sctx) sorts$/;"	v	language:SML
sort_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun sort_map (on_prop : sigcontext -> scontext -> prop -> prop) (gctx : sigcontext) (sctx : scontext) (s : sort) : sort =$/;"	f	language:SML
spec'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (spec', (s', k', c', t')) = on_spec gctx s k c t spec$/;"	v	language:SML
specs'	/Users/wayne/timl/impl/compiler/desugar.sml	/^          val (specs', s, k, c, t) = foldl iter ([], 0, 0, 0, 0) specs$/;"	v	language:SML
specs''	/Users/wayne/timl/impl/compiler/desugar.sml	/^          val specs'' = rev specs'$/;"	v	language:SML
spec_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun spec_map (on_idx : sigcontext -> scontext -> idx -> idx)$/;"	f	language:SML
stb'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val (stb', sctx', kctx', cctx', tctx') =$/;"	v	language:SML
stbinds'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val (stbinds', sctx', kctx'', cctx', tctx'') = foldl iter ([], sctx, kctx', cctx, tctx') stbinds$/;"	v	language:SML
stbinds''	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val stbinds'' = rev stbinds'$/;"	v	language:SML
str_constr	/Users/wayne/timl/impl/compiler/passes.sml	/^          val str_constr = snd o transform_constr$/;"	v	language:SML
str_constr	/Users/wayne/timl/impl/compiler/passes.sml	/^          val str_constr = snd o transform_constr$/;"	v	language:SML
str_constr	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun str_constr cstr = snd (transform_constr (cstr, []))$/;"	f	language:SML
str_constr_bin_op	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  fun str_constr_bin_op bop =$/;"	f	language:SML
str_constr_un_op	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  fun str_constr_un_op uop =$/;"	f	language:SML
str_kind	/Users/wayne/timl/impl/compiler/passes.sml	/^          val str_kind = snd o transform_kind$/;"	v	language:SML
str_kind	/Users/wayne/timl/impl/compiler/passes.sml	/^          val str_kind = snd o transform_kind$/;"	v	language:SML
str_kind	/Users/wayne/timl/impl/compiler/passes.sml	/^          val str_kind = snd o transform_kind$/;"	v	language:SML
str_prop	/Users/wayne/timl/impl/compiler/passes.sml	/^          val str_prop = snd o transform_prop$/;"	v	language:SML
str_prop	/Users/wayne/timl/impl/compiler/passes.sml	/^          val str_prop = snd o transform_prop$/;"	v	language:SML
str_prop_bin_conn	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  fun str_prop_bin_conn conn =$/;"	f	language:SML
str_prop_bin_rel	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  fun str_prop_bin_rel rel =$/;"	f	language:SML
str_term	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun str_term tm = snd (transform_term (tm, []))$/;"	f	language:SML
str_term_bin_op	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  fun str_term_bin_op TmBopIntAdd = "+"$/;"	f	language:SML
subst_constr_in_constr_top	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun subst_constr_in_constr_top to cstr =$/;"	f	language:SML
subst_constr_in_term_top	/Users/wayne/timl/impl/compiler/passes.sml	/^    fun subst_constr_in_term_top to tm =$/;"	f	language:SML
t'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val t' = on_mtype gctx sctx' kctx' t$/;"	v	language:SML
t'	/Users/wayne/timl/impl/compiler/desugar.sml	/^                  val t' = on_mtype gctx sctx' kctx' t$/;"	v	language:SML
tb'	/Users/wayne/timl/impl/compiler/desugar.sml	/^          val (tb', gctx', fctx') = on_top_bind gctx fctx tb$/;"	v	language:SML
tcontext	/Users/wayne/timl/impl/compiler/desugar.sml	/^  type tcontext = int$/;"	t	language:SML
tctx'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val tctx' = tctx + 1$/;"	v	language:SML
term	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and term =$/;"	t	language:SML
TermShift	/Users/wayne/timl/impl/compiler/passes.sml	/^  structure TermShift =$/;"	r	language:SML
TermShiftHelper	/Users/wayne/timl/impl/compiler/passes.sml	/^    structure TermShiftHelper =$/;"	r	language:SML
TermShiftIns	/Users/wayne/timl/impl/compiler/passes.sml	/^    structure TermShiftIns = TermTransformPass(TermShiftHelper)$/;"	r	language:SML
TermSubstConstr	/Users/wayne/timl/impl/compiler/passes.sml	/^  structure TermSubstConstr =$/;"	r	language:SML
TermSubstConstrHelper	/Users/wayne/timl/impl/compiler/passes.sml	/^    structure TermSubstConstrHelper =$/;"	r	language:SML
TermSubstConstrIns	/Users/wayne/timl/impl/compiler/passes.sml	/^    structure TermSubstConstrIns = TermTransformPass(TermSubstConstrHelper)$/;"	r	language:SML
TermThreadedTransformPass	/Users/wayne/timl/impl/compiler/transform.sml	/^functor TermThreadedTransformPass(Arg:$/;"	c	language:SML
TermTransformPass	/Users/wayne/timl/impl/compiler/transform.sml	/^functor TermTransformPass(Arg:$/;"	c	language:SML
term_bin_op	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  and term_bin_op =$/;"	t	language:SML
term_bin_op_to_constr	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    fun term_bin_op_to_constr bop =$/;"	f	language:SML
test	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^  fun test () =$/;"	f	language:SML
thread	/Users/wayne/timl/impl/compiler/transform.sml	/^  type thread$/;"	t	language:SML
ti'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val ti' = Passes.TermShift.shift_constr_above (List.length delta) dep ti$/;"	v	language:SML
time	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type time = string$/;"	t	language:SML
tm	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tm = TmLet (#2 tyrel, #2 tyrel_res)$/;"	v	language:SML
tm'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val tm' = Passes.TermShift.shift_term_above (List.length delta) dep tm$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm1 = TmPack (CstrNat 1, TmNat 1)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm1, ()) = on_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm1, ()) = on_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm1, ()) = transform_term (tm1, (ctx, delta))$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm1, ()) = transform_term (tm1, (ctx, delta))$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm1, ()) = transform_term (tm1, (ctx, delta))$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/passes.sml	/^             val (tm1, ()) = on_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, thread) = transform_term (tm1, thread)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm1	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm1, up1) = transform_term (tm1, down)$/;"	v	language:SML
tm10	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm10 = TmCstrApp (TmVar 5, CstrVar 1)$/;"	v	language:SML
tm10_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm10_ctx = List.tl tm9_ctx$/;"	v	language:SML
tm10_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm10_deriv = TyDerivCstrApp (tm10_rel, TyDerivVar (tm10_ctx, TmVar 5, is_zero_ty, CstrTime "0.0"), KdDerivVar (tm10_ctx, CstrVar 1, KdNat))$/;"	v	language:SML
tm10_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm10_rel = (tm10_ctx, tm10, CstrArrow (CstrTypeNat (CstrVar 1), Passes.TermSubstConstr.subst_constr_in_constr_top (CstrBinOp (CstrBopEq, CstrVar 1, CstrNat 0)) bool_cstr_body, CstrTime "1.0"), CstrTime "0.0")$/;"	v	language:SML
tm11	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm11 = TmApp (tm10, TmVar 0)$/;"	v	language:SML
tm11_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm11_ctx = tm10_ctx$/;"	v	language:SML
tm11_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm11_deriv = TyDerivApp (tm11_rel, tm10_deriv, TyDerivVar (tm11_ctx, TmVar 0, CstrTypeNat (CstrVar 1), CstrTime "0.0"))$/;"	v	language:SML
tm11_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm11_rel = (tm11_ctx, tm11, Passes.TermSubstConstr.subst_constr_in_constr_top (CstrBinOp (CstrBopEq, CstrVar 1, CstrNat 0)) bool_cstr_body, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrTime "0.0"), CstrTime "1.0"), CstrTime "1.0"))$/;"	v	language:SML
tm12	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm12 = TmCase (tm11, tm1, tm9)$/;"	v	language:SML
tm125_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm125_deriv = TyDerivSub (tm125_rel, tm12_deriv, PrDerivAdmit (tm12_ctx, PrBinRel (PrRelLe, #4 tm12_rel, #4 tm125_rel)))$/;"	v	language:SML
tm125_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm125_rel = (tm12_ctx, tm12, #3 tm12_rel, CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrVar 1)))$/;"	v	language:SML
tm12_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm12_ctx = tm11_ctx$/;"	v	language:SML
tm12_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm12_deriv = TyDerivCase (tm12_rel, tm11_deriv, tm1_deriv, tm9_deriv)$/;"	v	language:SML
tm12_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm12_rel = (tm12_ctx, tm12, CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrTime "0.0"), CstrTime "1.0"), CstrTime "1.0"), CstrBinOp (CstrBopMax, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrTime "0.0")), CstrTime "1.0"), CstrTime "1.0")), CstrTime "1.0"), CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrBinOp (CstrBopDiff, CstrVar 1, CstrNat 1)))))), CstrTime "1.0"), CstrTime "1.0"))))$/;"	v	language:SML
tm13	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm13 = TmAbs (CstrTypeNat (CstrVar 0), tm12)$/;"	v	language:SML
tm13_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm13_ctx = List.tl tm12_ctx$/;"	v	language:SML
tm13_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm13_deriv = TyDerivAbs (tm13_rel, KdDerivTypeNat ((tm13_ctx, CstrTypeNat (CstrVar 0), KdProper), KdDerivVar (tm13_ctx, CstrVar 0, KdNat)), tm125_deriv)$/;"	v	language:SML
tm13_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm13_rel = (tm13_ctx, tm13, CstrArrow (CstrTypeNat (CstrVar 0), CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrVar 0))), CstrTime "0.0")$/;"	v	language:SML
tm14	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm14 = TmCstrAbs (KdNat, tm13)$/;"	v	language:SML
tm14_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm14_ctx = List.tl tm13_ctx$/;"	v	language:SML
tm14_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm14_deriv = TyDerivCstrAbs (tm14_rel, KdWfDerivNat (tm14_ctx, KdNat), tm13_deriv)$/;"	v	language:SML
tm14_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm14_rel = (tm14_ctx, tm14, fac_ty, CstrTime "0.0")$/;"	v	language:SML
tm15	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm15 = TmRec (fac_ty, tm14)$/;"	v	language:SML
tm15_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm15_ctx = List.tl tm14_ctx$/;"	v	language:SML
tm15_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm15_deriv = TyDerivRec (tm15_rel, KdDerivForall ((tm15_ctx, fac_ty, KdProper), KdWfDerivNat (tm15_ctx, KdNat), KdDerivArrow ((BdKind KdNat :: tm15_ctx, CstrArrow (CstrTypeNat (CstrVar 0), CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrVar 0))), KdProper), KdDerivTypeNat ((BdKind KdNat :: tm15_ctx, CstrTypeNat (CstrVar 0), KdProper), KdDerivVar (BdKind KdNat :: tm15_ctx, CstrVar 0, KdNat)), KdDerivExists ((BdKind KdNat :: tm15_ctx, CstrExists (KdNat, CstrTypeNat (CstrVar 0)), KdProper), KdWfDerivNat (BdKind KdNat :: tm15_ctx, KdNat), KdDerivVar (BdKind KdNat :: BdKind KdNat :: tm15_ctx, CstrVar 0, KdNat)), KdDerivBinOp ((BdKind KdNat :: tm15_ctx, CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrVar 0)), KdTimeFun 0), KdDerivTime (BdKind KdNat :: tm15_ctx, CstrTime "7.0", KdTimeFun 0), KdDerivUnOp ((BdKind KdNat :: tm15_ctx, CstrUnOp (CstrUopNat2Time, CstrVar 0), KdTimeFun 0), KdDerivVar (BdKind KdNat :: tm15_ctx, CstrVar 0, KdNat))))), tm14_deriv)$/;"	v	language:SML
tm15_deriv_new	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm15_deriv_new = DerivationPasses.ANF.normalize_derivation tm15_deriv$/;"	v	language:SML
tm15_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm15_rel = (tm15_ctx, tm15, fac_ty, CstrTime "0.0")$/;"	v	language:SML
tm15_rel_new	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm15_rel_new = DerivationPasses.ANF.extract_tyrel tm15_deriv_new$/;"	v	language:SML
tm1_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm1_ctx = [BdType (CstrExists (KdSubset (KdUnit, PrBinRel (PrRelEq, CstrBinOp (CstrBopEq, CstrVar 2, CstrNat 0), CstrTrue)), CstrTypeUnit)), BdType (CstrTypeNat (CstrVar 0)), BdKind KdNat, BdType fac_ty, BdType mult_ty, BdType minus_ty, BdType is_zero_ty]$/;"	v	language:SML
tm1_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm1_deriv = TyDerivPack (tm1_rel, KdDerivExists ((tm1_ctx, CstrExists (KdNat, CstrTypeNat (CstrVar 0)), KdProper), KdWfDerivNat (tm1_ctx, KdNat), KdDerivTypeNat ((BdKind KdNat :: tm1_ctx, CstrTypeNat (CstrVar 0), KdProper), KdDerivNat (tm1_ctx, CstrNat 1, KdNat))), KdDerivNat (tm1_ctx, CstrNat 1, KdNat), TyDerivNat (tm1_ctx, TmNat 1, CstrTypeNat (CstrNat 1), CstrTime "0.0"))$/;"	v	language:SML
tm1_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm1_rel = (tm1_ctx, tm1, CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrTime "0.0")$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm2 = TmPair (TmVar 1, TmNat 1)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = on_term (tm2, (who + 1, to))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = on_term (tm2, (who + 1, to))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = on_term (tm2, (who + 1, to))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = on_term (tm2, (who + 1, to))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = on_term (tm2, (who + 2, to))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = transform_term (tm2, (ctx + 1, delta))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = transform_term (tm2, (ctx + 1, delta))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = transform_term (tm2, (ctx + 1, delta))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = transform_term (tm2, (ctx + 1, delta))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = transform_term (tm2, (ctx + 1, delta))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm2, ()) = transform_term (tm2, (ctx + 2, delta))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/passes.sml	/^             val (tm2, ()) = on_term (tm2, (who + 1, to))$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, thread) = transform_term (tm2, thread)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm2, up2) = transform_term (tm2, down)$/;"	v	language:SML
tm2_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm2_ctx = [BdType (CstrExists (KdSubset (KdUnit, PrBinRel (PrRelEq, CstrBinOp (CstrBopEq, CstrVar 2, CstrNat 0), CstrFalse)), CstrTypeUnit)), BdType (CstrTypeNat (CstrVar 0)), BdKind KdNat, BdType fac_ty, BdType mult_ty, BdType minus_ty, BdType is_zero_ty]$/;"	v	language:SML
tm2_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm2_deriv = TyDerivPair (tm2_rel, TyDerivVar (tm2_ctx, TmVar 1, CstrTypeNat (CstrVar 2), CstrTime "0.0"), TyDerivNat (tm2_ctx, TmNat 1, CstrTypeNat (CstrNat 1), CstrTime "0.0"))$/;"	v	language:SML
tm2_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm2_rel = (tm2_ctx, tm2, CstrProd (CstrTypeNat (CstrVar 2), CstrTypeNat (CstrNat 1)), CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrTime "0.0"))$/;"	v	language:SML
tm3	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm3 = TmCstrApp (TmCstrApp (TmVar 5, CstrVar 2), CstrNat 1)$/;"	v	language:SML
tm3	/Users/wayne/timl/impl/compiler/passes.sml	/^              val (tm3, ()) = transform_term (tm3, (ctx + 1, delta))$/;"	v	language:SML
tm3	/Users/wayne/timl/impl/compiler/passes.sml	/^             val (tm3, ()) = on_term (tm3, (who + 1, to))$/;"	v	language:SML
tm3	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm3, thread) = transform_term (tm3, thread)$/;"	v	language:SML
tm3	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm3, thread) = transform_term (tm3, thread)$/;"	v	language:SML
tm3	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm3, up3) = transform_term (tm3, down)$/;"	v	language:SML
tm3	/Users/wayne/timl/impl/compiler/transform.sml	/^          val (tm3, up3) = transform_term (tm3, down)$/;"	v	language:SML
tm3_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm3_ctx = tm2_ctx$/;"	v	language:SML
tm3_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm3_deriv = TyDerivCstrApp (tm3_rel, TyDerivCstrApp ((tm3_ctx, TmCstrApp (TmVar 5, CstrVar 2), CstrForall (KdNat, CstrArrow (CstrProd (CstrTypeNat (CstrVar 3), CstrTypeNat (CstrVar 0)), CstrTypeNat (CstrBinOp (CstrBopDiff, CstrVar 3, CstrVar 0)), CstrTime "1.0")), CstrTime "0.0"), TyDerivVar (tm3_ctx, TmVar 5, minus_ty, CstrTime "0.0"), KdDerivVar (tm3_ctx, CstrVar 2, KdNat)), KdDerivNat (tm3_ctx, CstrNat 1, KdNat))$/;"	v	language:SML
tm3_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm3_rel = (tm3_ctx, tm3, CstrArrow (CstrProd (CstrTypeNat (CstrVar 2), CstrTypeNat (CstrNat 1)), CstrTypeNat (CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1)), CstrTime "1.0"), CstrTime "0.0")$/;"	v	language:SML
tm4	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm4 = TmApp (tm3, tm2)$/;"	v	language:SML
tm4_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm4_ctx = tm3_ctx$/;"	v	language:SML
tm4_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm4_deriv = TyDerivApp (tm4_rel, tm3_deriv, tm2_deriv)$/;"	v	language:SML
tm4_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm4_rel = (tm4_ctx, tm4, CstrTypeNat (CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1)), CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrTime "0.0")), CstrTime "1.0"), CstrTime "1.0"))$/;"	v	language:SML
tm5	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm5 = TmCstrApp (TmVar 3, CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1))$/;"	v	language:SML
tm5_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm5_ctx = tm4_ctx$/;"	v	language:SML
tm5_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm5_deriv = TyDerivCstrApp (tm5_rel, TyDerivVar (tm5_ctx, TmVar 3, fac_ty, CstrTime "0.0"), KdDerivBinOp ((tm5_ctx, CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1), KdNat), KdDerivVar (tm5_ctx, CstrVar 2, KdNat), KdDerivNat (tm5_ctx, CstrNat 1, KdNat)))$/;"	v	language:SML
tm5_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm5_rel = (tm5_ctx, tm5, CstrArrow (CstrTypeNat (CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1)), CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1)))), CstrTime "0.0")$/;"	v	language:SML
tm6	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm6 = TmApp (tm5, tm4)$/;"	v	language:SML
tm6_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm6_ctx = tm5_ctx$/;"	v	language:SML
tm6_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm6_deriv = TyDerivApp (tm6_rel, tm5_deriv, tm4_deriv)$/;"	v	language:SML
tm6_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm6_rel = (tm6_ctx, tm6, CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrTime "0.0")), CstrTime "1.0"), CstrTime "1.0")), CstrTime "1.0"), CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1)))))$/;"	v	language:SML
tm7	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm7 = TmPack (CstrVar 2, TmVar 1)$/;"	v	language:SML
tm7_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm7_ctx = tm6_ctx$/;"	v	language:SML
tm7_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm7_deriv = TyDerivPack (tm7_rel, KdDerivExists ((tm7_ctx, CstrExists (KdNat, CstrTypeNat (CstrVar 0)), KdProper), KdWfDerivNat (tm7_ctx, KdNat), KdDerivTypeNat ((BdKind KdNat :: tm7_ctx, CstrTypeNat (CstrVar 0), KdProper), KdDerivVar (tm7_ctx, CstrVar 2, KdNat))), KdDerivVar (tm7_ctx, CstrVar 2, KdNat), TyDerivVar (tm7_ctx, TmVar 1, CstrTypeNat (CstrVar 2), CstrTime "0.0"))$/;"	v	language:SML
tm7_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm7_rel = (tm7_ctx, tm7, CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrTime "0.0")$/;"	v	language:SML
tm8	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm8 = TmPair (tm7, tm6)$/;"	v	language:SML
tm8_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm8_ctx = tm7_ctx$/;"	v	language:SML
tm8_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm8_deriv = TyDerivPair (tm8_rel, tm7_deriv, tm6_deriv)$/;"	v	language:SML
tm8_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm8_rel = (tm8_ctx, tm8, CstrProd (CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrExists (KdNat, CstrTypeNat (CstrVar 0))), CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrTime "0.0")), CstrTime "1.0"), CstrTime "1.0")), CstrTime "1.0"), CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1))))))$/;"	v	language:SML
tm9	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm9 = TmApp (TmVar 4, tm8)$/;"	v	language:SML
tm9_ctx	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm9_ctx = tm8_ctx$/;"	v	language:SML
tm9_deriv	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm9_deriv = TyDerivApp (tm9_rel, TyDerivVar (tm9_ctx, TmVar 4, mult_ty, CstrTime "0.0"), tm8_deriv)$/;"	v	language:SML
tm9_rel	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val tm9_rel = (tm9_ctx, tm9, CstrExists (KdNat, CstrTypeNat (CstrVar 0)), CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrBinOp (CstrBopAdd, CstrTime "0.0", CstrTime "0.0")), CstrTime "1.0"), CstrTime "1.0")), CstrTime "1.0"), CstrBinOp (CstrBopMult, CstrTime "7.0", CstrUnOp (CstrUopNat2Time, CstrBinOp (CstrBopDiff, CstrVar 2, CstrNat 1)))))), CstrTime "1.0"), CstrTime "1.0"))$/;"	v	language:SML
top_bind_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun top_bind_map (on_modu : sigcontext -> mod -> mod * context)$/;"	f	language:SML
transformer_constr	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_constr (on_constr, on_kind) (cstr : constr, down as (who, to) : down) =$/;"	f	language:SML
transformer_constr	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_constr (transform_constr, transform_kind) (cstr : constr, (ctx, delta) : down) =$/;"	f	language:SML
transformer_constr	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_constr (transform_constr, transform_kind) (cstr : constr, ctx : down) =$/;"	f	language:SML
transformer_constr	/Users/wayne/timl/impl/compiler/transform.sml	/^  val transformer_constr : ((MicroTiML.constr * down) -> (MicroTiML.constr * up)) * ((MicroTiML.kind * down) -> (MicroTiML.kind * up)) -> (MicroTiML.constr * down) -> (MicroTiML.constr * up) option$/;"	v	language:SML
transformer_constr	/Users/wayne/timl/impl/compiler/transform.sml	/^  val transformer_constr : ((MicroTiML.constr * thread) -> (MicroTiML.constr * thread)) * ((MicroTiML.kind * thread) -> (MicroTiML.kind * thread)) -> (MicroTiML.constr * thread) -> (MicroTiML.constr * thread) option$/;"	v	language:SML
transformer_kind	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_kind (on_kind, on_prop) (kd : kind, down as (who, to) : down) =$/;"	f	language:SML
transformer_kind	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_kind (transform_kind, transform_prop) (kd : kind, (ctx, delta) : down) =$/;"	f	language:SML
transformer_kind	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_kind (transform_kind, transform_prop) (kd : kind, ctx : down) =$/;"	f	language:SML
transformer_kind	/Users/wayne/timl/impl/compiler/transform.sml	/^  val transformer_kind : ((MicroTiML.kind * down) -> (MicroTiML.kind * up)) * ((MicroTiML.prop * down) -> (MicroTiML.prop * up)) -> (MicroTiML.kind * down) -> (MicroTiML.kind * up) option$/;"	v	language:SML
transformer_kind	/Users/wayne/timl/impl/compiler/transform.sml	/^  val transformer_kind : ((MicroTiML.kind * thread) -> (MicroTiML.kind * thread)) * ((MicroTiML.prop * thread) -> (MicroTiML.prop * thread)) -> (MicroTiML.kind * thread) -> (MicroTiML.kind * thread) option$/;"	v	language:SML
transformer_kinding_derivation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun transformer_kinding_derivation (on_kdderiv, on_prderiv, on_kdwf) (kdderiv : kinding_derivation, down as (dep, delta) : down) =$/;"	f	language:SML
transformer_kinding_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val transformer_kinding_derivation : (MicroTiML.kinding_derivation * down -> MicroTiML.kinding_derivation * up) * (MicroTiML.proping_derivation * down -> MicroTiML.proping_derivation * up) * (MicroTiML.kind_wellformedness_derivation * down -> MicroTiML.kind_wellformedness_derivation * up) -> (MicroTiML.kinding_derivation * down) -> (MicroTiML.kinding_derivation * up) option$/;"	v	language:SML
transformer_kind_wellformness_derivation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun transformer_kind_wellformness_derivation (on_kdwf, on_prwf) (kdwf : kind_wellformedness_derivation, down as (dep, delta) : down) =$/;"	f	language:SML
transformer_kind_wellformness_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val transformer_kind_wellformness_derivation : (MicroTiML.kind_wellformedness_derivation * down -> MicroTiML.kind_wellformedness_derivation * up) * (MicroTiML.prop_wellformedness_derivation * down -> MicroTiML.prop_wellformedness_derivation * up) -> (MicroTiML.kind_wellformedness_derivation * down) -> (MicroTiML.kind_wellformedness_derivation * up) option$/;"	v	language:SML
transformer_prop	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_prop (on_constr, on_kind, on_prop) (pr : prop, down as (who, to) : down) =$/;"	f	language:SML
transformer_prop	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_prop (transform_constr, transform_kind, transform_prop) (pr : prop, (ctx, delta) : down) =$/;"	f	language:SML
transformer_prop	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_prop (transform_constr, transform_kind, transform_prop) (pr : prop, ctx : down) =$/;"	f	language:SML
transformer_prop	/Users/wayne/timl/impl/compiler/transform.sml	/^  val transformer_prop : ((MicroTiML.constr * down) -> (MicroTiML.constr * up)) * ((MicroTiML.kind * down) -> (MicroTiML.kind * up)) * ((MicroTiML.prop * down) -> (MicroTiML.prop * up)) -> (MicroTiML.prop * down) -> (MicroTiML.prop * up) option$/;"	v	language:SML
transformer_prop	/Users/wayne/timl/impl/compiler/transform.sml	/^  val transformer_prop : ((MicroTiML.constr * thread) -> (MicroTiML.constr * thread)) * ((MicroTiML.kind * thread) -> (MicroTiML.kind * thread)) * ((MicroTiML.prop * thread) -> (MicroTiML.prop * thread)) -> (MicroTiML.prop * thread) -> (MicroTiML.prop * thread) option$/;"	v	language:SML
transformer_proping_derivation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun transformer_proping_derivation _ = NONE$/;"	f	language:SML
transformer_proping_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val transformer_proping_derivation : (MicroTiML.proping_derivation * down) -> (MicroTiML.proping_derivation * up) option$/;"	v	language:SML
transformer_prop_wellformness_derivation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun transformer_prop_wellformness_derivation (on_prwf, on_kdwf, on_kdderiv) (prwf : prop_wellformedness_derivation, down as (dep, delta) : down) =$/;"	f	language:SML
transformer_prop_wellformness_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val transformer_prop_wellformness_derivation : (MicroTiML.prop_wellformedness_derivation * down -> MicroTiML.prop_wellformedness_derivation * up) * (MicroTiML.kind_wellformedness_derivation * down -> MicroTiML.kind_wellformedness_derivation * up) * (MicroTiML.kinding_derivation * down -> MicroTiML.kinding_derivation * up) -> (MicroTiML.prop_wellformedness_derivation * down) -> (MicroTiML.prop_wellformedness_derivation * up) option$/;"	v	language:SML
transformer_term	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_term (on_constr, on_kind, on_term) (tm : term, down as (who, to) : down) =$/;"	f	language:SML
transformer_term	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_term (transform_constr, transform_kind, transform_term) (tm : term, (ctx, delta) : down) =$/;"	f	language:SML
transformer_term	/Users/wayne/timl/impl/compiler/passes.sml	/^      fun transformer_term (transform_constr, transform_kind, transform_term) (tm : term, ctx : down) =$/;"	f	language:SML
transformer_term	/Users/wayne/timl/impl/compiler/transform.sml	/^  val transformer_term : ((MicroTiML.constr * down) -> (MicroTiML.constr * up)) * ((MicroTiML.kind * down) -> (MicroTiML.kind * up)) * ((MicroTiML.term * down) -> (MicroTiML.term * up)) -> (MicroTiML.term * down) -> (MicroTiML.term * up) option$/;"	v	language:SML
transformer_term	/Users/wayne/timl/impl/compiler/transform.sml	/^  val transformer_term : ((MicroTiML.constr * thread) -> (MicroTiML.constr * thread)) * ((MicroTiML.kind * thread) -> (MicroTiML.kind * thread)) * ((MicroTiML.term * thread) -> (MicroTiML.term * thread)) -> (MicroTiML.term * thread) -> (MicroTiML.term * thread) option$/;"	v	language:SML
transformer_typing_derivation	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      fun transformer_typing_derivation (on_tyderiv, on_kdderiv, on_prderiv, on_kdwf) (tyderiv : typing_derivation, down as (dep, delta) : down) =$/;"	f	language:SML
transformer_typing_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val transformer_typing_derivation : (MicroTiML.typing_derivation * down -> MicroTiML.typing_derivation * up) * (MicroTiML.kinding_derivation * down -> MicroTiML.kinding_derivation * up) * (MicroTiML.proping_derivation * down -> MicroTiML.proping_derivation * up) * (MicroTiML.kind_wellformedness_derivation * down -> MicroTiML.kind_wellformedness_derivation * up) -> (MicroTiML.typing_derivation * down) -> (MicroTiML.typing_derivation * up) option$/;"	v	language:SML
transform_constr	/Users/wayne/timl/impl/compiler/transform.sml	/^  and transform_constr (cstr : constr, down : Arg.down) =$/;"	v	language:SML
transform_constr	/Users/wayne/timl/impl/compiler/transform.sml	/^  and transform_constr (cstr : constr, thread : Arg.thread) =$/;"	v	language:SML
transform_kind	/Users/wayne/timl/impl/compiler/transform.sml	/^  and transform_kind (kd : kind, down : Arg.down) =$/;"	v	language:SML
transform_kind	/Users/wayne/timl/impl/compiler/transform.sml	/^  and transform_kind (kd : kind, thread : Arg.thread) =$/;"	v	language:SML
transform_kinding_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and transform_kinding_derivation (kdderiv : kinding_derivation, down : Arg.down) =$/;"	v	language:SML
transform_kind_wellformness_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and transform_kind_wellformness_derivation (kdwf : kind_wellformedness_derivation, down : Arg.down) =$/;"	v	language:SML
transform_prop	/Users/wayne/timl/impl/compiler/transform.sml	/^  and transform_prop (pr : prop, down : Arg.down) =$/;"	v	language:SML
transform_prop	/Users/wayne/timl/impl/compiler/transform.sml	/^  and transform_prop (pr : prop, thread : Arg.thread) =$/;"	v	language:SML
transform_proping_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and transform_proping_derivation (prderiv : proping_derivation, down : Arg.down) =$/;"	v	language:SML
transform_prop_wellformness_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and transform_prop_wellformness_derivation (prwf : prop_wellformedness_derivation, down : Arg.down) =$/;"	v	language:SML
transform_term	/Users/wayne/timl/impl/compiler/transform.sml	/^  and transform_term (tm : term, down : Arg.down) =$/;"	v	language:SML
transform_term	/Users/wayne/timl/impl/compiler/transform.sml	/^  and transform_term (tm : term, thread : Arg.thread) =$/;"	v	language:SML
transform_typing_derivation	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  and transform_typing_derivation (tyderiv : typing_derivation, down : Arg.down) =$/;"	v	language:SML
ty	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val ty = #3 tyrel$/;"	v	language:SML
ty'	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val ty' = Passes.TermShift.shift_constr_above (List.length delta) dep ty$/;"	v	language:SML
ty1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (ty1, ty2, ti) = extract_cstr_arrow (#3 tyrel1_new)$/;"	v	language:SML
ty1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val (ty1, ty2) = extract_cstr_prod (#3 tyrel1_new)$/;"	v	language:SML
ty1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val (ty1, ty2) = extract_cstr_prod (#3 tyrel1_new)$/;"	v	language:SML
ty1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val (ty1, ty2, ti) = extract_cstr_arrow (#3 tyrel)$/;"	v	language:SML
ty1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val (ty1, rands) = unfold_app (#3 tyrel1) []$/;"	v	language:SML
ty1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val (ty1, rands) = unfold_app ty []$/;"	v	language:SML
ty1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val ty1_new = #3 tyrel1_new$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv1, ()) = on_tyderiv (tyderiv1, down)$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv1, ()) = on_tyderiv (tyderiv1, down)$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv1, ()) = on_tyderiv (tyderiv1, down)$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv1, up1) = on_tyderiv tyderiv1$/;"	v	language:SML
tyderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val tyderiv1_new = shift_typing_derivation_above (List.concat [d4, d2]) 0 tyderiv1_new$/;"	v	language:SML
tyderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyderiv1_new = shift_typing_derivation_above d2 0 tyderiv1_new$/;"	v	language:SML
tyderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyderiv1_new = shift_typing_derivation_above d2 0 tyderiv1_new$/;"	v	language:SML
tyderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyderiv1_new = shift_typing_derivation_above d2 0 tyderiv1_new$/;"	v	language:SML
tyderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyderiv1_new = shift_typing_derivation_above d2 0 tyderiv1_new$/;"	v	language:SML
tyderiv1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv1_new = shift_typing_derivation_above d2 0 tyderiv1_new$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv2, ()) = on_tyderiv (tyderiv2, (dep + 1, delta))$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv2, ()) = on_tyderiv (tyderiv2, (dep + 1, delta))$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv2, ()) = on_tyderiv (tyderiv2, (dep + 1, delta))$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv2, ()) = on_tyderiv (tyderiv2, (dep + 1, delta))$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv2, ()) = on_tyderiv (tyderiv2, (dep + 1, delta))$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv2, ()) = on_tyderiv (tyderiv2, (dep + 2, delta))$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv2, up2) = on_tyderiv tyderiv2$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val tyderiv2_new = shift_typing_derivation_above d4 0 tyderiv2_new$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv2_new = normalize tyderiv2_new (fn (tyderiv2_new, d2) => k (tyderiv2_new, List.concat [d2, List.take (#1 tyrel2_new, 1), d1]))$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv2_new = normalize tyderiv2_new (fn (tyderiv2_new, d2) => k (tyderiv2_new, List.concat [d2, List.take (#1 tyrel2_new, 2), d1]))$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv2_new = normalize_derivation tyderiv2_new$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv2_new = shift_typing_derivation_above d1 1 tyderiv2$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv2_new = shift_typing_derivation_above d1 1 tyderiv2$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv2_new = shift_typing_derivation_above d1 2 tyderiv2$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyderiv2_new = normalize_derivation tyderiv2$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyderiv2_new = normalize_derivation tyderiv2$/;"	v	language:SML
tyderiv2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyderiv2_new = normalize_derivation tyderiv2$/;"	v	language:SML
tyderiv2_sub	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyderiv2_sub = TyDerivSub ((#1 tyrel2_new, #2 tyrel2_new, #3 tyrel2_new, Passes.TermShift.shift_constr 1 ti), tyderiv2_new, PrDerivAdmit (#1 tyrel2_new, PrBinRel (PrRelLe, #4 tyrel2_new, Passes.TermShift.shift_constr 1 ti)))$/;"	v	language:SML
tyderiv3	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val (tyderiv3, ()) = on_tyderiv (tyderiv3, (dep + 1, delta))$/;"	v	language:SML
tyderiv3	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv3, up3) = on_tyderiv tyderiv3$/;"	v	language:SML
tyderiv3	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv3, up3) = on_tyderiv tyderiv3$/;"	v	language:SML
tyderiv3_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv3_new = normalize_derivation tyderiv3_new$/;"	v	language:SML
tyderiv3_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv3_new = shift_typing_derivation_above d1 1 tyderiv3$/;"	v	language:SML
tyderiv4	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^            val (tyderiv4, up4) = on_tyderiv tyderiv4$/;"	v	language:SML
tyderiv_intro_var	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv_intro_var = TyDerivVar tyrel_intro_var$/;"	v	language:SML
tyderiv_let	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyderiv_let = TyDerivLet (tyrel_let, tyderiv, res)$/;"	v	language:SML
TypingDerivationShift	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^  structure TypingDerivationShift =$/;"	r	language:SML
TypingDerivationShiftHelper	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    structure TypingDerivationShiftHelper =$/;"	r	language:SML
TypingDerivationShiftIns	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^    structure TypingDerivationShiftIns = TypingDerivationTransformPass(TypingDerivationShiftHelper)$/;"	r	language:SML
TypingDerivationTransformPass	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^functor TypingDerivationTransformPass(Arg:$/;"	c	language:SML
typing_derivation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  datatype typing_derivation =$/;"	t	language:SML
typing_relation	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type typing_relation = context * term * constr * constr$/;"	t	language:SML
tyrel	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^          val tyrel = extract_tyrel tyderiv$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel1 = ANF.extract_tyrel tyderiv1$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel1_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel1_new = extract_tyrel tyderiv1_new$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel2 = ANF.extract_tyrel tyderiv2$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel2_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyrel2_new = extract_tyrel tyderiv2_new$/;"	v	language:SML
tyrel3	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel3 = ANF.extract_tyrel tyderiv3$/;"	v	language:SML
tyrel3	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel3 = ANF.extract_tyrel tyderiv3$/;"	v	language:SML
tyrel3_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel3_new = extract_tyrel tyderiv3_new$/;"	v	language:SML
tyrel3_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel3_new = extract_tyrel tyderiv3_new$/;"	v	language:SML
tyrel4	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val tyrel4 = ANF.extract_tyrel tyderiv4$/;"	v	language:SML
tyrel4_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val tyrel4_new = extract_tyrel tyderiv4_new$/;"	v	language:SML
tyrel_intro_var	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_intro_var = (BdType ty :: (#1 tyrel), TmVar 0, Passes.TermShift.shift_constr 1 ty, CstrTime "0.0")$/;"	v	language:SML
tyrel_let	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_let = (#1 tyrel, tm, Passes.TermShift.shift_constr_above ~1 0 (#3 tyrel_res), CstrBinOp (CstrBopAdd, #4 tyrel, Passes.TermShift.shift_constr_above ~1 0 (#4 tyrel_res)))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                  val tyrel_new = (#1 tyrel4_new, TmLet (TmArrayPut (#2 tyrel1_new, #2 tyrel2_new, #2 tyrel4_new), #2 inner_tyrel_new), Passes.TermShift.shift_constr_above ~1 0 (#3 inner_tyrel_new), CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, #4 tyrel1_new, #4 tyrel2_new), #4 tyrel4_new), Passes.TermShift.shift_constr_above ~1 0 (#4 inner_tyrel_new)))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel_new = (#1 tyrel2_new, TmApp (#2 tyrel1_new, #2 tyrel2_new), ty2, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, CstrBinOp (CstrBopAdd, #4 tyrel1_new, #4 tyrel2_new), CstrTime "1.0"), ti))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel_new = (#1 tyrel2_new, TmArrayGet (#2 tyrel1_new, #2 tyrel2_new), #1 (extract_cstr_type_array (#3 tyrel1_new)), CstrBinOp (CstrBopAdd, #4 tyrel1_new, #4 tyrel2_new))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel_new = (#1 tyrel2_new, TmArrayNew (#2 tyrel1_new, #2 tyrel2_new), CstrTypeArray (#3 tyrel2_new, extract_cstr_type_nat (#3 tyrel1_new)), CstrBinOp (CstrBopAdd, #4 tyrel1_new, #4 tyrel2_new))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^                val tyrel_new = (#1 tyrel2_new, TmBinOp (bop, #2 tyrel1_new, #2 tyrel2_new), #1 (term_bin_op_to_constr bop), CstrBinOp (CstrBopAdd, #4 tyrel1_new, #4 tyrel2_new))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel1_new, TmCase (#2 tyrel1_new, #2 tyrel2_new, #2 tyrel3_new), Passes.TermShift.shift_constr_above ~1 0 (#3 tyrel2_new), CstrBinOp (CstrBopAdd, #4 tyrel1_new, CstrBinOp (CstrBopMax, Passes.TermShift.shift_constr_above ~1 0 (#4 tyrel2_new), Passes.TermShift.shift_constr_above ~1 0 (#4 tyrel3_new))))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel1_new, TmCstrApp (#2 tyrel1_new, #2 kdrel2_new), ty_new, #4 tyrel1_new)$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel1_new, TmFst (#2 tyrel1_new), ty1, #4 tyrel1_new)$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel1_new, TmLet (#2 tyrel1_new, #2 tyrel2_new), Passes.TermShift.shift_constr_above ~1 0 (#3 tyrel1_new), CstrBinOp (CstrBopAdd, #4 tyrel1_new, Passes.TermShift.shift_constr_above ~1 0 (#4 tyrel2_new)))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel1_new, TmSnd (#2 tyrel1_new), ty2, #4 tyrel1_new)$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel1_new, TmUnfold (#2 tyrel1_new), ty_new, #4 tyrel1_new)$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel1_new, TmUnpack (#2 tyrel1_new, #2 tyrel2_new), Passes.TermShift.shift_constr_above ~2 0 (#3 tyrel2_new), CstrBinOp (CstrBopAdd, #4 tyrel1_new, Passes.TermShift.shift_constr_above ~2 0 (#4 tyrel2_new)))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel2_new, TmFold (#2 tyrel2_new), #2 kdrel1_new, #4 tyrel2_new)$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel2_new, TmInLeft (#2 tyrel2_new), CstrSum (#3 tyrel2_new, #2 kdrel1_new), #4 tyrel2_new)$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel2_new, TmInRight (#2 tyrel2_new), CstrSum (#2 kdrel1_new, #3 tyrel2_new), #4 tyrel2_new)$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel2_new, TmPair (#2 tyrel1_new, #2 tyrel2_new), CstrProd (#3 tyrel1_new, #3 tyrel2_new), CstrBinOp (CstrBopAdd, #4 tyrel1_new, #4 tyrel2_new))$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_new = (#1 tyrel3_new, TmPack (#2 kdrel2_new, #2 tyrel3_new), #2 kdrel1_new, #4 tyrel3_new)$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyrel_new = (#1 tyrel, TmAbs (kd1, #2 tyrel2_new), #3 tyrel, CstrTime "0.0")$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyrel_new = (#1 tyrel, TmCstrAbs (kd1, #2 tyrel2_new), #3 tyrel, CstrTime "0.0")$/;"	v	language:SML
tyrel_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^            val tyrel_new = (#1 tyrel, TmRec (kd1, #2 tyrel2_new), #3 tyrel, CstrTime "0.0")$/;"	v	language:SML
tyrel_res	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val tyrel_res = extract_tyrel res$/;"	v	language:SML
ty_kind	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val (ty_kind, ty_constr) = extract_cstr_forall (#3 tyrel1_new)$/;"	v	language:SML
ty_map	/Users/wayne/timl/impl/compiler/desugar.sml	/^  fun ty_map (on_mtype : sigcontext -> scontext -> kcontext -> mtype -> mtype) (gctx : sigcontext)$/;"	f	language:SML
ty_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val ty_new = Passes.TermSubstConstr.subst_constr_in_constr_top (#2 kdrel2_new) ty_constr$/;"	v	language:SML
ty_new	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              val ty_new = Passes.TermSubstConstr.subst_constr_in_constr_top inner inner_cstr$/;"	v	language:SML
UE	/Users/wayne/timl/impl/compiler/compile.sml	/^  structure UE = UnderscoredExpr$/;"	r	language:SML
unfold_app	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^              fun unfold_app ty1 rands =$/;"	f	language:SML
unfold_app	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          fun unfold_app ty1 rands =$/;"	f	language:SML
unfold_app	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          fun unfold_app ty1 rands =$/;"	f	language:SML
up	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      type up = unit$/;"	t	language:SML
up	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  type up$/;"	t	language:SML
up	/Users/wayne/timl/impl/compiler/passes.sml	/^      type up = string$/;"	t	language:SML
up	/Users/wayne/timl/impl/compiler/passes.sml	/^      type up = unit$/;"	t	language:SML
up	/Users/wayne/timl/impl/compiler/passes.sml	/^      type up = unit$/;"	t	language:SML
up	/Users/wayne/timl/impl/compiler/transform.sml	/^  type up$/;"	t	language:SML
upward_base	/Users/wayne/timl/impl/compiler/derivation-passes.sml	/^      val upward_base = ()$/;"	v	language:SML
upward_base	/Users/wayne/timl/impl/compiler/derivation-transform.sml	/^  val upward_base : up$/;"	v	language:SML
upward_base	/Users/wayne/timl/impl/compiler/passes.sml	/^      val upward_base = ""$/;"	v	language:SML
upward_base	/Users/wayne/timl/impl/compiler/passes.sml	/^      val upward_base = ()$/;"	v	language:SML
upward_base	/Users/wayne/timl/impl/compiler/passes.sml	/^      val upward_base = ()$/;"	v	language:SML
upward_base	/Users/wayne/timl/impl/compiler/transform.sml	/^  val upward_base : up$/;"	v	language:SML
using'	/Users/wayne/timl/impl/compiler/desugar.sml	/^              val using' = on_idx gctx sctx' using$/;"	v	language:SML
var	/Users/wayne/timl/impl/compiler/micro-timl.sml	/^  type var = nat$/;"	t	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (k : kind) : kind =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (kctx : kcontext) (t : ty) : ty =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (modu : mod) : mod * context =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (p : ptrn) : ptrn =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (s : sort) : sort =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (s : spec) : spec * context =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (sctx : scontext) (i : idx) : idx =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (sctx : scontext) (kctx : kcontext) (cctx : ccontext) (tctx : tcontext) (d : decl) : (decl * context) =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (sctx : scontext) (kctx : kcontext) (cctx : ccontext) (tctx : tcontext) (e : expr) : expr =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (sctx : scontext) (mt : mtype) : mtype =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (sctx : scontext) (p : prop) : prop =$/;"	f	language:SML
walk	/Users/wayne/timl/impl/compiler/desugar.sml	/^      fun walk (tb : top_bind) : top_bind * sigcontext * sigcontext =$/;"	f	language:SML
walk_constr	/Users/wayne/timl/impl/compiler/desugar.sml	/^              fun walk_constr ((cname, ibinds, r) : constr_decl) =$/;"	f	language:SML
walk_constr	/Users/wayne/timl/impl/compiler/desugar.sml	/^              fun walk_constr ((cname, ibinds, r) : constr_decl) =$/;"	f	language:SML
walk_rule	/Users/wayne/timl/impl/compiler/desugar.sml	/^              fun walk_rule (rp, re) =$/;"	f	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#1 kdrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#1 tyrel2 = BdType ty1 :: ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#1 tyrel3 = BdType ty2 :: ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#2 kdrel1 = ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#2 tyrel2 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#2 tyrel3 = tm3)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#3 kdrel1 = KdProper)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#3 tyrel2 = shift_constr 1 ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#3 tyrel2 = subst_constr_in_constr_top ty1 ty_body)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#3 tyrel3 = shift_constr 1 ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#4 tyrel2 = shift_constr 1 ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#4 tyrel2 = ti)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                        val _ = assert (#4 tyrel3 = shift_constr 1 ti3)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 kdrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 prrel3 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 prrel3 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel2 = BdType ty1 :: BdKind kd1 :: ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#1 tyrel4 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 kdrel2 = cstr2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 prrel3 = PrBinRel (PrRelLt, j2, j1))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 prrel3 = PrBinRel (PrRelLt, j2, j1))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#2 tyrel4 = tm3)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#3 kdrel2 = kd1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#3 tyrel2 = shift_constr 2 ty2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#3 tyrel4 = ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel1 = ti)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel1 = ti)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel2 = shift_constr 2 ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel2 = ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel2 = ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (#4 tyrel4 = ti3)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (ty = fold_app (subst_constr_in_constr_top ty1 ty_body) rands)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (ty = subst_constr_in_constr_top cstr2 ty_body)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^                  val _ = assert (ty' = ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 kdrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 kdrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 kdrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 kdrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 kdrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 kdrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 kdrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 kdwfrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 prrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 prrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel1 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = BdKind kd1 :: ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = BdType (#3 tyrel1) :: ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = BdType cstr1 :: ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = BdType cstr1 :: ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel2 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#1 tyrel3 = ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 kdrel1 = cstr1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 kdrel1 = cstr1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 kdrel1 = ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 kdrel1 = ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 kdrel1 = ty1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 kdrel1 = ty2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 kdrel2 = cstr1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 kdwfrel1 = kd1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 prrel2 = PrBinRel (PrRelLe, #4 tyrel1, ti))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 prrel2 = PrBot)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel1 = tm)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel1 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel2 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#2 tyrel3 = tm2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 kdrel1 = KdProper)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 kdrel1 = KdProper)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 kdrel1 = KdProper)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 kdrel1 = KdProper)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 kdrel1 = KdProper)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 kdrel1 = KdProper)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 kdrel2 = kd1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel1 = CstrArrow (#3 tyrel2, ty, ti3))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel1 = CstrTypeNat cstr2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel1 = ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel1 = ty1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel2 = cstr1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel2 = shift_constr 1 cstr1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel2 = shift_constr 1 ty2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel2 = ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel2 = ty1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel2 = ty2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel2 = ty2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#3 tyrel3 = subst_constr_in_constr_top cstr1 ty1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel1 = ti)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel1 = ti)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel1 = ti1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = CstrTime "0.0")$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = CstrTime "0.0")$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = shift_constr 1 ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = ti)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = ti)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel2 = ti2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (#4 tyrel3 = ti)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert ((#3 tyrel1, #3 tyrel2) = #2 (ANF.term_bin_op_to_constr bop))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (case (#3 tyrel1) of CstrProd (ty1, ty2) => ty = ty1 | _ => false)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (case (#3 tyrel1) of CstrProd (ty1, ty2) => ty = ty2 | _ => false)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kinding_derivation kdderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_kind_wellformness_derivation kdwf1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_proping_derivation prderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_proping_derivation prderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_proping_derivation prderiv3)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_proping_derivation prderiv3)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv1)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv2)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv3)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv3)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (check_typing_derivation tyderiv4)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (cstr1 = ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (get_bind (ctx, x) = BdType ty)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (kd1 = kd1')$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (n = m)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (ty = #1 (ANF.term_bin_op_to_constr bop))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (ty = CstrArrow (cstr1, shift_constr ~1 (#3 tyrel2), shift_constr ~1 (#4 tyrel2)))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = assert (x >= 0 andalso x < List.length ctx)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = case (#3 tyrel1) of$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ = case ty1 of$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ =$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ =$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ =$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ =$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^          val _ =$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^      handle CheckFail => let val _ = println (snd (Passes.Printer.transform_term (#2 (ANF.extract_tyrel tyderiv), List.mapi (fn (i, _) => "%orz" ^ (str_int i)) (#1 (ANF.extract_tyrel tyderiv))))) in false end$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-checker.sml	/^    | _ => let val _ = assert false in true end)$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val _ = println (snd (Passes.Printer.transform_term (#2 tm15_rel_new, ["mult", "minus", "is_zero"])))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val _ = println (str_bool (MicroTiMLChecker.check_typing_derivation tm15_deriv))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val _ = println (str_bool (MicroTiMLChecker.check_typing_derivation tm15_deriv_new))$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/micro-timl-test.sml	/^      val _ = test ()$/;"	v	language:SML
_	/Users/wayne/timl/impl/compiler/passes.sml	/^              val _ = inc counter$/;"	v	language:SML
