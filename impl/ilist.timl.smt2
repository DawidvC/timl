(define-fun max ((x Int) (y Int)) Int
  (ite (< x y) y x))
(define-fun mymin ((x Int) (y Int)) Int
  (ite (> x y) y x))
(declare-datatypes () ((Unit TT)))

(push)
(declare-const n! Int)
(assert (<= 0 n!))
(declare-const n Int)
(assert (<= 0 n))
(declare-const m Int)
(assert (<= 0 m))
(assert (= (+ n! 1) n))
(assert (not (<= (+ (+ 1 m) (+ 1 (* (+ m 2) n!))) (* (+ m 2) n))))
(check-sat)
(pop)
(push)
(declare-const n! Int)
(assert (<= 0 n!))
(declare-const n Int)
(assert (<= 0 n))
(declare-const m Int)
(assert (<= 0 m))
(assert (= (+ n! 1) n))
(assert (not (<= (+ (+ (+ (+ 1 m) 1) 1) (* (+ m 3) n!)) (* (+ m 3) n))))
(check-sat)
(pop)
(push)
(declare-const n Int)
(assert (<= 0 n))
(assert (= 0 n))
(assert (not (and (<= 0 1) (<= 0 1))))
(check-sat)
(pop)
(push)
(declare-const n Int)
(assert (<= 0 n))
(assert (= 0 n))
(assert (not (<= 0 n)))
(check-sat)
(pop)
(push)
(declare-const _ Int)
(assert (<= 0 _))
(declare-const n Int)
(assert (<= 0 n))
(assert (= 0 _))
(assert (= (+ _ 1) n))
(assert (not (= n 1)))
(check-sat)
(pop)
(push)
(declare-const _ Int)
(assert (<= 0 _))
(declare-const n Int)
(assert (<= 0 n))
(assert (= 0 _))
(assert (= (+ _ 1) n))
(assert (not (= 1 n)))
(check-sat)
(pop)
(push)
(declare-const _ Int)
(assert (<= 0 _))
(declare-const n Int)
(assert (<= 0 n))
(assert (= 0 _))
(assert (= (+ _ 1) n))
(assert (not (<= 0 n)))
(check-sat)
(pop)
(push)
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const n! Int)
(assert (<= 0 n!))
(declare-const _ Int)
(assert (<= 0 _))
(declare-const n Int)
(assert (<= 0 n))
(assert (= (+ n1 n2) n!))
(assert (= (+ n! 1) _))
(assert (= (+ _ 1) n))
(assert (and (<= n1 (+ n2 1)) (<= n2 (+ n1 1))))
(assert (not (and (<= (+ n1 1) (+ (+ n2 1) 1)) (<= (+ n2 1) (+ (+ n1 1) 1)))))
(check-sat)
(pop)
(push)
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const n! Int)
(assert (<= 0 n!))
(declare-const _ Int)
(assert (<= 0 _))
(declare-const n Int)
(assert (<= 0 n))
(assert (= (+ n1 n2) n!))
(assert (= (+ n! 1) _))
(assert (= (+ _ 1) n))
(assert (and (<= n1 (+ n2 1)) (<= n2 (+ n1 1))))
(assert (not (= (+ (+ n1 1) (+ n2 1)) n)))
(check-sat)
(pop)
(push)
(declare-const n! Int)
(assert (<= 0 n!))
(declare-const _ Int)
(assert (<= 0 _))
(declare-const n Int)
(assert (<= 0 n))
(assert (= (+ n! 1) _))
(assert (= (+ _ 1) n))
(assert (not (<= (+ 1 n!) n)))
(check-sat)
(pop)
(push)
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const m Int)
(assert (<= 0 m))
(assert (= 0 n1))
(assert (not (= n2 (+ n1 n2))))
(check-sat)
(pop)
(push)
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const m Int)
(assert (<= 0 m))
(assert (= 0 n1))
(assert (not (<= 0 (* (+ m 3) (+ n1 n2)))))
(check-sat)
(pop)
(push)
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const m Int)
(assert (<= 0 m))
(assert (= 0 n2))
(assert (not (= n1 (+ n1 n2))))
(check-sat)
(pop)
(push)
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const m Int)
(assert (<= 0 m))
(assert (= 0 n2))
(assert (not (<= 0 (* (+ m 3) (+ n1 n2)))))
(check-sat)
(pop)
(push)
(declare-const n2! Int)
(assert (<= 0 n2!))
(declare-const n1! Int)
(assert (<= 0 n1!))
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const m Int)
(assert (<= 0 m))
(assert (= (+ n2! 1) n2))
(assert (= (+ n1! 1) n1))
(assert (not (= (+ (+ n1! n2) 1) (+ (+ n1 n2!) 1))))
(check-sat)
(pop)
(push)
(declare-const n2! Int)
(assert (<= 0 n2!))
(declare-const n1! Int)
(assert (<= 0 n1!))
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const m Int)
(assert (<= 0 m))
(assert (= (+ n2! 1) n2))
(assert (= (+ n1! 1) n1))
(assert (not (= (+ (+ n1 n2!) 1) (+ (+ n1! n2) 1))))
(check-sat)
(pop)
(push)
(declare-const n2! Int)
(assert (<= 0 n2!))
(declare-const n1! Int)
(assert (<= 0 n1!))
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const m Int)
(assert (<= 0 m))
(assert (= (+ n2! 1) n2))
(assert (= (+ n1! 1) n1))
(assert (not (= (+ (+ n1! n2) 1) (+ n1 n2))))
(check-sat)
(pop)
(push)
(declare-const n2! Int)
(assert (<= 0 n2!))
(declare-const n1! Int)
(assert (<= 0 n1!))
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const m Int)
(assert (<= 0 m))
(assert (= (+ n2! 1) n2))
(assert (= (+ n1! 1) n1))
(assert (not (<= (+ (+ 1 m) (max (+ (+ 1 1) (* (+ m 3) (+ n1! n2))) (+ (+ 1 1) (* (+ m 3) (+ n1 n2!))))) (* (+ m 3) (+ n1 n2)))))
(check-sat)
(pop)
(push)
(declare-const n2 Int)
(assert (<= 0 n2))
(declare-const n1 Int)
(assert (<= 0 n1))
(declare-const _0 Int)
(assert (<= 0 _0))
(declare-const _ Int)
(assert (<= 0 _))
(declare-const n Int)
(assert (<= 0 n))
(declare-const m Int)
(assert (<= 0 m))
(assert (= (+ n1 n2) n))
(assert (= (+ _0 1) _))
(assert (= (+ _ 1) n))
(assert (and (<= n1 (+ n2 1)) (<= n2 (+ n1 1))))
(assert (not (<= (+ (+ (+ (+ (+ 1 (+ 1 (* m n1))) 1) (+ 1 (* m n2))) 1) (* (+ m 3) (+ n1 n2))) (* m n))))
(check-sat)
(pop)
(push)
(declare-const n Int)
(assert (<= 0 n))
(declare-const m Int)
(assert (<= 0 m))
(assert (not (<= (+ (+ 1 n) (* m n)) (* m n))))
(check-sat)
(pop)
